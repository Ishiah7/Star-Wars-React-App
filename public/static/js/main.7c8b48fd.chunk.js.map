{"version":3,"sources":["components/IndividualPerson.js","components/Loader.js","components/NoCharacterError.js","components/InitialPeople.js","components/Navigation.js","components/SearchBar.js","components/About.js","components/ErrorBlock.js","components/People.js","App.js","reportWebVitals.js","index.js"],"names":["IndividualPerson","props","person","name","height","mass","gender","homeworld","className","Loader","id","NoCharacterError","PEOPLE_QUERY","gql","InitialPeople","useQuery","loading","error","data","people","map","index","person_id","Navigation","state","pageNumber","prevPage","currentPageNumber","setState","handleSubmit","nextPage","to","this","onClick","Component","SearchBar","useState","searchQuery","setSearchQuery","onSubmit","e","preventDefault","type","placeholder","maxLength","value","onChange","target","SEARCH_QUERY","About","search","match","params","variables","characterSearch","currentPage","PAGE_QUERY","People","pageSearch","client","ApolloClient","uri","cache","InMemoryCache","App","setCurrentPage","page","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAIe,SAASA,EAAiBC,GAAQ,IAAD,EAEiBA,EAArDC,OAAUC,EAF0B,EAE1BA,KAAMC,EAFoB,EAEpBA,OAAQC,EAFY,EAEZA,KAAMC,EAFM,EAENA,OAAQC,EAFF,EAEEA,UAE9C,OACI,sBAAKC,UAAU,mBAAf,UACI,oBAAIA,UAAU,cAAd,SAA8BL,IAC9B,sBAAKK,UAAU,sBAAf,UACI,0BAASA,UAAU,yBAAnB,UACI,sBAAKA,UAAU,yBAAf,UACI,oBAAIA,UAAU,uBAAd,qBACA,mBAAGA,UAAU,sBAAb,SAAqCJ,OAGzC,sBAAKI,UAAU,yBAAf,UACI,oBAAIA,UAAU,uBAAd,kBACA,mBAAGA,UAAU,sBAAb,SAAqCH,UAI7C,0BAASG,UAAU,yBAAnB,UACI,sBAAKA,UAAU,yBAAf,UACI,oBAAIA,UAAU,uBAAd,oBACA,mBAAGA,UAAU,sBAAb,SAAqCF,OAGzC,sBAAKE,UAAU,yBAAf,UACI,oBAAIA,UAAU,uBAAd,uBACA,mBAAGA,UAAU,sBAAb,SAAqCD,gBC5B9C,SAASE,IACpB,OACI,qBAAKC,GAAG,SAAR,SACI,0CCHG,SAASC,IACpB,OACI,qBAAKD,GAAG,qBAAR,SACI,kDCIZ,IAAME,EAAeC,cAAH,+LA4BHC,MAhBR,WAA0B,IAAD,EACKC,mBAASH,GAAlCI,EADoB,EACpBA,QAASC,EADW,EACXA,MAAOC,EADI,EACJA,KAExB,OAAIF,EAAgB,cAACP,EAAD,IAChBQ,EAAc,cAACN,EAAD,IAGd,qBAAKH,UAAU,mBAAf,SACGU,EAAKC,OAAOC,KAAI,SAAClB,EAAQmB,GAAT,OACf,cAACrB,EAAD,CAAsCsB,UAAcD,EAAQ,EAAInB,OAAWA,GAAjDmB,EAAQ,S,gCC3BzBE,E,4MAIjBC,MAAQ,CACJC,WAAY,G,EAKhBC,SAAW,WACP,IAAIC,EAAoB,EAAKH,MAAMC,WAEhCE,EAAoB,IACnB,EAAKC,SAAS,CACVH,WAAYE,EAAoB,IAEhC,EAAK1B,MAAM4B,aAAa,EAAKL,MAAMC,WAAa,K,EAK5DK,SAAW,WACP,IAAIH,EAAoB,EAAKH,MAAMC,WAEhCE,EAAoB,IACnB,EAAKC,SAAS,CACVH,WAAYE,EAAoB,IAEpC,EAAK1B,MAAM4B,aAAa,EAAKL,MAAMC,WAAa,K,4CAKxD,WACI,OACI,qBAAKjB,UAAU,qBAAf,SACI,sBAAKA,UAAU,qBAAf,UACI,cAAC,IAAD,CAAMA,UAAU,qBAAqBuB,GAAE,gBAAYC,KAAKR,MAAMC,WAAa,EAAI,EAAKO,KAAKR,MAAMC,WAAa,EAAIO,KAAKR,MAAMC,YAAcQ,QAASD,KAAKN,SAAvJ,kBACA,sBAAMlB,UAAU,sBAAhB,SAAwCwB,KAAKR,MAAMC,aACnD,cAAC,IAAD,CAAMjB,UAAU,qBAAqBuB,GAAE,gBAAYC,KAAKR,MAAMC,WAAa,EAAI,GAAMO,KAAKR,MAAMC,WAAa,EAAIO,KAAKR,MAAMC,YAAcQ,QAASD,KAAKF,SAAxJ,2B,GAxCoBI,aC2BzBC,I,IAAAA,EA1BR,SAAmBlC,GAAQ,IAAD,EACOmC,mBAAS,IADhB,mBACxBC,EADwB,KACXC,EADW,KAS/B,OACE,uBAAMC,SAPS,SAACC,GAChBA,EAAEC,iBACFxC,EAAM4B,aAAaQ,IAKSK,KAAK,SAASlC,UAAU,uBAApD,UACI,uBACEA,UAAU,eACVmC,YAAY,sBACZC,UAAY,KACZF,KAAK,OACLG,MAAQR,EACRS,SAAY,SAAAN,GAAC,OAAIF,EAAeE,EAAEO,OAAOF,UAE3C,cAAC,IAAD,CAAMd,GAAE,iBAAaM,GAAgBK,KAAK,SAASG,MAAM,SAASrC,UAAU,gBAA5E,wBCZFwC,EAAenC,cAAH,8OAuEHoC,EA3DD,SAAChD,GAAW,IAEnBiD,EAAWjD,EAAMkD,MAAMC,OAAvBF,OAFkB,EAISnC,mBAASiC,EAAc,CACjDK,UAAW,CAAEH,YADZlC,EAJgB,EAIhBA,QAASC,EAJO,EAIPA,MAAOC,EAJA,EAIAA,KAKxB,GAAIF,EAAS,OAAO,cAACP,EAAD,IACpB,GAAIQ,EAAO,OAAO,cAACN,EAAD,IAGf,IAAIT,EAASgB,EAAKoC,gBAAgB,GAMlC,OAAIpD,GAAUD,EAAMsD,YAEZ,sBAAK/C,UAAU,mBAAf,UACI,cAACR,EAAD,CAAkBE,OAAQA,IAC1B,cAAC,IAAD,CAAM6B,GAAE,gBAAW9B,EAAMsD,aAAe7C,GAAG,cAA3C,qBAKHR,IAAYD,EAAMsD,YAEf,sBAAK/C,UAAU,mBAAf,UACI,cAACR,EAAD,CAAkBE,OAAQA,IAC1B,cAAC,IAAD,CAAM6B,GAAE,gBAAW,GAAKrB,GAAG,cAA3B,qBAMJR,GAAaD,EAAMsD,YAYvB,sBAAK/C,UAAU,mBAAf,UACI,cAAC,EAAD,IACA,cAAC,IAAD,CAAMuB,GAAE,gBAAW9B,EAAMsD,aAAe7C,GAAG,cAA3C,qBAZA,sBAAKF,UAAU,mBAAf,UACI,cAAC,EAAD,IACA,cAAC,IAAD,CAAMuB,GAAE,gBAAW,GAAKrB,GAAG,cAA3B,sBC/DL,SAASC,IACpB,OACI,qBAAKD,GAAG,cAAR,SACI,0DCGZ,IAAM8C,EAAa3C,cAAH,mOAkCD4C,EArBA,SAACxD,GAAW,IACpBS,EAAOT,EAAMkD,MAAMC,OAAnB1C,GADmB,EAGQK,mBAASyC,EAAY,CAC/CH,UAAW,CAAE3C,QADZM,EAHiB,EAGjBA,QAASC,EAHQ,EAGRA,MAAOC,EAHC,EAGDA,KAKxB,OAAIF,EAAgB,cAACP,EAAD,IAChBQ,EAAc,cAAC,EAAD,IAIjB,qBAAKT,UAAU,mBAAf,SACSU,EAAKwC,WAAWtC,KAAI,SAAClB,EAAQmB,GAAT,OACnB,cAACrB,EAAD,CAAsCE,OAAWA,GAAvBmB,EAAQ,SCxBxCsC,EAAS,IAAIC,eAAa,CAC9BC,IAAK,WACLC,MAAO,IAAIC,kBAyCEC,MAtCf,WAAe,MAIyB5B,mBAAS,IAJlC,mBAINC,EAJM,KAIOC,EAJP,OAKyBF,mBAAS,IALlC,mBAKNmB,EALM,KAKOU,EALP,KAkBb,OACE,cAAC,iBAAD,CAAgBN,OAAQA,EAAxB,SACA,cAAC,IAAD,UACE,sBAAKnD,UAAU,gBAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,sBAAKA,UAAU,SAAf,UACE,cAAC,EAAD,CAAWqB,aAhBM,SAACqB,GAC1BZ,EAAeY,MAgBP,cAAC,EAAD,CAAYrB,aAZG,SAACqC,GACxBD,EAAeC,WAcX,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAcvD,IACpC,cAAC,IAAD,CAAOqD,OAAK,EAACC,KAAK,YAAYC,UAAcZ,IAC5C,cAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,iBAAiBC,UAAc,SAAApE,GAAK,OAAI,cAAC,EAAD,2BAAWA,GAAX,IAAkBsD,YAAaA,EAAalB,YAAaA,gBCrC5GiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7c8b48fd.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\nexport default function IndividualPerson(props) {\r\n\r\n    const { person: { name, height, mass, gender, homeworld }} = props;\r\n\r\n    return (    \r\n        <div className=\"person-container\">\r\n            <h2 className=\"person-name\">{ name }</h2>\r\n            <div className=\"person-main-content\">\r\n                <section className=\"person-content-section\">\r\n                    <div className=\"person-content-wrapper\">\r\n                        <h3 className=\"person-content-title\">Height:</h3>\r\n                        <p className=\"person-content-data\">{ height }</p>\r\n                    </div>\r\n\r\n                    <div className=\"person-content-wrapper\">\r\n                        <h3 className=\"person-content-title\">Mass</h3>\r\n                        <p className=\"person-content-data\">{ mass }</p>\r\n                    </div>\r\n                </section>\r\n\r\n                <section className=\"person-content-section\">\r\n                    <div className=\"person-content-wrapper\">\r\n                        <h3 className=\"person-content-title\">Gender</h3>\r\n                        <p className=\"person-content-data\">{ gender }</p>\r\n                    </div>\r\n\r\n                    <div className=\"person-content-wrapper\">\r\n                        <h3 className=\"person-content-title\">Homeworld</h3>\r\n                        <p className=\"person-content-data\">{ homeworld }</p>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\n\r\n\r\nexport default function Loader() {\r\n    return (\r\n        <div id=\"loader\">\r\n            <p>LOADING</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\n\r\n\r\nexport default function NoCharacterError() {\r\n    return (\r\n        <div id=\"no-character-error\">\r\n            <p>Name not found.</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { gql } from '@apollo/client';\r\nimport { useQuery } from '@apollo/client';\r\nimport IndividualPerson from './IndividualPerson';\r\nimport Loader from './Loader';\r\nimport NoCharacterError from './NoCharacterError';\r\n\r\n\r\n\r\n//  Query to get the initial page / first page.\r\n\r\nconst PEOPLE_QUERY = gql`\r\n    query PeopleQuery {\r\n        people{\r\n            name,\r\n            height,\r\n            mass,\r\n            gender,\r\n            homeworld\r\n        }\r\n    }\r\n`;\r\n\r\nexport function InitialPeople() {\r\n    const { loading, error, data } = useQuery(PEOPLE_QUERY);\r\n  \r\n    if (loading) return <Loader />;\r\n    if (error) return <NoCharacterError />;\r\n\r\n    return (\r\n        <div className=\"people-container\">\r\n          {data.people.map((person, index) => (\r\n            <IndividualPerson key = { index + 1 } person_id = { index + 1 } person = { person }/>\r\n          ))}\r\n        </div>\r\n    );\r\n}; \r\n  \r\n\r\nexport default InitialPeople\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nexport default class Navigation extends Component {\r\n    \r\n    // The state holds the current page the user is on.\r\n\r\n    state = {\r\n        pageNumber: 1,\r\n    }\r\n\r\n    // setState is Async, which is why the same arithmetic is done in setState and handleSubmit(). \r\n\r\n    prevPage = () => {\r\n        let currentPageNumber = this.state.pageNumber;\r\n\r\n        if(currentPageNumber > 1){\r\n            this.setState({\r\n                pageNumber: currentPageNumber - 1\r\n            })\r\n                this.props.handleSubmit(this.state.pageNumber - 1)\r\n        }\r\n    }\r\n    \r\n\r\n    nextPage = () => {\r\n        let currentPageNumber = this.state.pageNumber;\r\n\r\n        if(currentPageNumber < 9){\r\n            this.setState({\r\n                pageNumber: currentPageNumber + 1\r\n            })\r\n            this.props.handleSubmit(this.state.pageNumber + 1)\r\n        }\r\n    }\r\n   \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"navigation-section\">\r\n                <div className=\"navigation-wrapper\">\r\n                    <Link className=\"navigation-buttons\" to={`/page/${(this.state.pageNumber - 1 > 0) ? this.state.pageNumber - 1 : this.state.pageNumber}`} onClick={this.prevPage} >Prev</Link>\r\n                    <span className=\"current-page-number\">{ this.state.pageNumber }</span>\r\n                    <Link className=\"navigation-buttons\" to={`/page/${(this.state.pageNumber + 1 < 10) ? this.state.pageNumber + 1 : this.state.pageNumber}`} onClick={this.nextPage}>Next</Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { useState }from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n// State saves search query from user.\r\n\r\nexport function SearchBar(props) {\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  \r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.handleSubmit(searchQuery)\r\n  }\r\n\r\n\r\n  return (\r\n    <form onSubmit={ onSubmit } type=\"submit\" className=\"search-bar-component\">\r\n        <input\r\n          className=\"search-input\"\r\n          placeholder=\"Search Character...\"\r\n          maxLength = \"40\" \r\n          type=\"text\"\r\n          value={ searchQuery }\r\n          onChange = {e => setSearchQuery(e.target.value)}\r\n        />\r\n        <Link to={`/about/${ searchQuery }`} type=\"submit\" value=\"Submit\" className=\"search-button\">Search</Link>\r\n    </form>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport { gql } from '@apollo/client';\r\nimport { useQuery } from '@apollo/client';\r\nimport { Link } from 'react-router-dom';\r\nimport IndividualPerson from './IndividualPerson';\r\nimport Loader from './Loader';\r\nimport ErrorBlock from './NoCharacterError';\r\nimport NoCharacterError from './NoCharacterError';\r\n\r\n\r\n\r\n//  Query to get the character from user search.\r\n\r\nconst SEARCH_QUERY = gql`\r\n    query SearchQuery($search: String!) {\r\n        characterSearch(character: $search){\r\n            name,\r\n            height,\r\n            mass,\r\n            gender,\r\n            homeworld\r\n        }\r\n    }\r\n`;\r\n\r\nconst About = (props) => {\r\n\r\n\tlet { search } = props.match.params;\r\n\r\n\tconst { loading, error, data } = useQuery(SEARCH_QUERY, {\r\n        variables: { search }\r\n    });\r\n    \r\n\r\n\tif (loading) return <Loader />;\r\n\tif (error) return <NoCharacterError />;\r\n\r\n\r\n    let person = data.characterSearch[0];\r\n    \r\n\r\n    // Checks if user input matches a character in the API.\r\n    // Returns ErrorBlock if no user is found.\r\n\r\n    if (person && props.currentPage){\r\n        return (\r\n            <div className=\"people-container\">\r\n                <IndividualPerson person={person}/>\r\n                <Link to={`/page/${props.currentPage}`} id=\"back-button\">Back</Link>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    else if (person && !(props.currentPage)){\r\n            return (\r\n                <div className=\"people-container\">\r\n                    <IndividualPerson person={person}/>\r\n                    <Link to={`/page/${1}`} id=\"back-button\">Back</Link>\r\n                </div>\r\n            );\r\n        }\r\n\r\n\r\n     else if (!(person) && !(props.currentPage)){\r\n             return (\r\n                <div className=\"people-container\">\r\n                    <ErrorBlock />\r\n                    <Link to={`/page/${1}`} id=\"back-button\">Back</Link>\r\n                </div>\r\n             );\r\n        }\r\n\r\n\r\n    else{\r\n        return (\r\n            <div className=\"people-container\">\r\n                <ErrorBlock />\r\n                <Link to={`/page/${props.currentPage}`} id=\"back-button\">Back</Link>\r\n            </div>\r\n        ); \r\n    }\r\n};\r\n\r\n\r\nexport default About\r\n","import React from 'react';\r\n\r\n\r\n\r\nexport default function NoCharacterError() {\r\n    return (\r\n        <div id=\"error-block\">\r\n            <p>Something went wrong...</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { gql } from '@apollo/client';\r\nimport { useQuery } from '@apollo/client';\r\nimport IndividualPerson from './IndividualPerson';\r\nimport Loader from './Loader';\r\nimport ErrorBlock from './ErrorBlock';\r\n\r\n\r\n// Query to get the different pages from the API.\r\n\r\nconst PAGE_QUERY = gql`\r\n    query PersonQuery($id: String!) {\r\n        pageSearch(page_number: $id){\r\n            name,\r\n            height,\r\n            mass,\r\n            gender,\r\n            homeworld\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nconst People = (props) => {\r\n\tlet { id } = props.match.params;\r\n\r\n\tconst { loading, error, data } = useQuery(PAGE_QUERY, {\r\n        variables: { id }\r\n    });\r\n    \r\n\r\n\tif (loading) return <Loader />;\r\n\tif (error) return <ErrorBlock />;\r\n    \r\n\r\n\treturn (\r\n\t\t<div className=\"people-container\">\r\n          {data.pageSearch.map((person, index) => (\r\n            <IndividualPerson key = { index + 1 } person = { person }/>\r\n          ))}\r\n        </div>\r\n\t);\r\n};\r\n\r\nexport default People\r\n","import './styles/App.css';\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { ApolloProvider } from '@apollo/client';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport React, { useState }from 'react';\nimport InitialPeople from './components/InitialPeople';\nimport Navigation from './components/Navigation';\nimport SearchBar from './components/SearchBar';\nimport About from './components/About';\nimport People from './components/People';\n\n\n\n\nconst client = new ApolloClient({\n  uri: '/graphql',\n  cache: new InMemoryCache()\n})\n\nfunction App() {\n\n  // 2 states to store and pass user search query and current page user is on.\n\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(\"\");\n\n\n  const handleSearchSubmit = (search) => {\n    setSearchQuery(search);\n  }\n\n\n  const handlePageNumber = (page) => {\n    setCurrentPage(page);\n  }\n\n\n  return (\n    <ApolloProvider client={client}>\n    <Router>\n      <div className=\"app-container\">\n        <div className=\"navbar-wrapper\">\n          <nav className=\"navbar\">\n            <SearchBar handleSubmit = { handleSearchSubmit }/>\n            <Navigation handleSubmit = { handlePageNumber }/>\n          </nav> \n        </div>    \n        <Route exact path=\"/\" component = { InitialPeople } />\n        <Route exact path=\"/page/:id\" component = { People } />\n        <Route exact path=\"/about/:search\" component = { props => <About {...props} currentPage={currentPage} searchQuery={searchQuery}/> } />       \n      </div>\n    </Router>\n    </ApolloProvider>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}